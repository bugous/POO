  import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class main {

	private static final Integer Integer = null;

	@SuppressWarnings("unused")
	public static void main(String[] args) {
		ArrayList<produtos> lista = new ArrayList<produtos>();
		Scanner sc = new Scanner(System.in);
		
		produtos p1;
		
		System.out.println("-----   Bem-vindo a PC2 Store's!   -----");
		System.out.println("");
		Integer opcao;
		
		do {
		System.out.println("-----             Menu             -----");
		System.out.println("1. Adicionar um produto;");
		System.out.println("2. Encontrar o produto com o maior preço de venda;");
		System.out.println("3. Encontrar o produto com a maior quantidade disponível no estoque;");
		System.out.println("4. Encontar um dado produto através do seu código de identificação;");
		System.out.println("5. Alterar o preço de venda de um dado produto;");
		System.out.println("6. Listar todos os produtos pelo nome em ordem alfabética;");
		System.out.println("7. Sair.");
		System.out.println("");
		System.out.print("Opção desejada: ");
		opcao = sc.nextInt();
		System.out.println("");
			switch(opcao) {
				case 1:
					p1 = new produtos(null, null, null, null, null);
					System.out.println("-----     Adicionar um produto     -----");
					System.out.println("");
					System.out.println("");
					System.out.print("- Código: ");
					p1.setCodigo(sc.nextInt());
					System.out.print("- Nome: ");
					sc.nextLine();
					p1.setNome(sc.nextLine());
					System.out.print("- Quantidade: ");
					p1.setQuantidade(sc.nextInt());
					System.out.print("- Valor: ");
					p1.setValor(sc.nextDouble());
					sc.nextLine();
					System.out.print("- Descrição: ");
					p1.setDescricao(sc.nextLine());
					System.out.println("");
					System.out.println("Produto adicionado com sucesso!");
					System.out.println("");
					System.out.println("");
					lista.add(p1);
					break;
				case 2:
					Integer v, g = 0;
					Double maiorpreco=0.0;
					System.out.println("-----     Produto com maior preço     -----");
					for(v=0;v<lista.size();v++) {
						if(lista.get(v).getValor()>maiorpreco) {
							maiorpreco = lista.get(v).getValor();
							g = v;}
					}
					System.out.println("");
					System.out.println("O produto com maior preço é " +lista.get(g).getNome() + " com valor de R$ " + maiorpreco);
					System.out.println("");
					System.out.println("");
					break;
				case 3: 	
					Integer f, maiorquantidade = 0;
					Integer h = 0;
					System.out.println("-----     Produto com maior quantidade     -----");
					for(f=0;f<lista.size();f++) {
						if(lista.get(f).getValor()>maiorquantidade) {
							maiorquantidade = lista.get(f).getQuantidade();
							h = f;}
					}
					System.out.println("");
					System.out.println("O produto com maior quantidade no estoque é " +lista.get(h).getNome() + " com um total de " + maiorquantidade + " no estoque.");			
					System.out.println("");
					System.out.println("");
				case 4: 
					Integer i, CID = 0;
					System.out.println("-----     Produto com maior preço     -----");
					System.out.print("Digite o  codigo de identificacao do produto quer saber os dados: ");
					CID= sc.nextInt(); 
					for(i=0;i<lista.size();i++) {
						if(lista.get(i).getCodigo()==CID) {
							System.out.println("");
							System.out.println("Os dados do produto sao: ");
							System.out.println("Código:" + lista.get(i).getCodigo());
							System.out.println("Nome: " + lista.get(i).getNome());
							System.out.println("Quantidade: " + lista.get(i).getQuantidade());
							System.out.println("Valor: " + lista.get(i).getValor());
							System.out.println("Descrição: " + lista.get(i).getDescricao());
							System.out.println("");
					    }
					}
					for(i=0;i<lista.size();i++) {
						if(lista.get(i).getCodigo()!=CID) {
							System.out.println("");
							System.out.println("Código inválido ou inexistente! Tente novamente.");
							System.out.println("");}
					}break;
				case 5:
					Integer j, codigo = 0;
					Double novopreco = 0.0;
					System.out.print("Digite o codigo do produto a ser alterado o preço: ");
					codigo = sc.nextInt();
					for(j=0;j<lista.size();j++) {
						if(lista.get(j).getCodigo()!=codigo) {
							System.out.println("Código inválido ou inexistente! Tente novamente.");
							System.out.println("");
							break;
					    }}
					for(j=0;j<lista.size();j++) {
						if(lista.get(j).getCodigo()==codigo) {
							System.out.print("Digite o novo preço: ");
							novopreco = (double)sc.nextInt();
							lista.get(j).setValor(novopreco);
							System.out.println("Preço alterado com sucesso! ");
							System.out.println("");
							break;
					    }
					} break;
				case 6:
					for(i=0;i<lista.size();i++) {
					Collections.sort(lista, new ProdutosNomeComparator() );
			        System.out.println("Lista de produtos por ordem alfabética: ");
					System.out.println("");
					System.out.println("--- Produto " + (i+1) + " ---");
					System.out.println("Código:" + lista.get(i).getCodigo());
					System.out.println("Nome: " + lista.get(i).getNome());
					System.out.println("Quantidade: " + lista.get(i).getQuantidade());
					System.out.println("Valor: " + lista.get(i).getValor());
					System.out.println("Descrição: " + lista.get(i).getDescricao());
					System.out.println("");
			    };
			    break;
			        
			}
		}
		while(opcao!=7);
        }
}


public class produtos {

	private Integer codigo;
	private String nome;
	private Integer quantidade;
	private Double valor;
	private String descricao;


	public produtos(Integer codigo, String nome, Integer quantidade, Double valor, String descricao) {
		this.codigo = codigo;
		this.nome = nome;
		this.quantidade = quantidade;
		this.valor = valor;
		this.descricao = descricao;
	}

	public Integer getCodigo() {
		return codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public Integer getQuantidade() {
		return quantidade;
	}

	public void setQuantidade(Integer quantidade) {
		this.quantidade = quantidade;
	}

	public Double getValor() {
		return valor;
	}

	public void setValor(Double valor) {
		this.valor = valor;
	}

	public String getDescricao() {
		return descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}
  
}

Classe ProdutosNomeComparator                                                                                                    import java.util.Comparator;

public class ProdutosNomeComparator implements Comparator<produtos> {

	@Override
	public int compare(produtos e1, produtos e2) {
		 return e1.getNome().compareTo(e2.getNome());
	}

}
